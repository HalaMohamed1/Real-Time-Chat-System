services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: rtcs
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: mqtt_broker
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - mosquitto_data:/mosquitto/data
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-t", "$$SYS/#", "-C", "1", "-i", "healthcheck"]
      interval: 5s
      timeout: 5s
      retries: 5

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - REDIS_ADDR=redis:6379
      - JWT_SECRET=your-secret-key-here
      - PORT=8080
    depends_on:
      redis:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_NAME=rtcs
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MQTT_BROKER=tcp://mqtt:1883
      - MQTT_WEBSOCKET=ws://mqtt:9001
      - PORT=8080
      - HOST=0.0.0.0
    volumes:
      - ./public:/app/public
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mqtt:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  mosquitto_data: 